import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;


public class Raster {

	int [][] data;
	int width, height;

	public Raster() {}
	public Raster(File file) throws IOException {
		this.read(file);
	}
	public Raster(int width, int height){
		this.width = width;
		this.height = height;
		this.data = new int[height][width];
	}
	
	public int getWidth() {
		return width;
	}

	public int getHeight() {
		return height;
	}

	public void read(File file) throws IOException{
		BufferedImage inputImage = ImageIO.read(file);
		this.width = inputImage.getWidth();
		this.height = inputImage.getHeight();
		
		data = new int[height][width];
		for(int i = 0; i < height; i++){
			for(int j = 0; j < width; j++){
				int c = inputImage.getRGB(j, i);
				int a = c >> 24 & 0xff;
				int r = c >> 16 & 0xff;
				int g = c >> 8 & 0xff;
				int b = c & 0xff;
				data[i][j] = (int) (255 - (0.2126 * r + 0.7152 * g + 0.0722 * b) * a / 255);
			}
		}		
	}
	
	public void save(File file) throws IOException {
		BufferedImage outputImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
		for(int i = 0; i < height; i++){
			for(int j = 0; j < width; j++){
				int c = data[i][j];
				if(c > 255) c = 255;
				c = 255 - c;
				c = c + (c << 8) + (c << 16);
				outputImage.setRGB(j, i, c);
			}
		}
		String format = file.getName();
		format = format.substring(format.lastIndexOf('.'));
		ImageIO.write(outputImage, format, file);
		System.out.println(format);
	}
	
	
}
